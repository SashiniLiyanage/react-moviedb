{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb-logo.svg","components/Header/Header.styles.js","context.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no-image.jpg","components/Home.js","components/BreadCrump/BreadCrump.styles.js","components/BreadCrump/index.js","components/Rate/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","components/Login.styles.js","components/Login.js","components/Actors.js","components/Videos/Videos.styles.js","components/Videos/index.js","components/SimilarMovies/index.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Context","createContext","UserProvider","init","children","sessionStorage","getItem","JSON","parse","useState","state","setState","Provider","value","Header","useContext","user","to","src","RMDBLogo","alt","className","userName","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","Grid","header","protoTypes","PropTypes","string","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovieVideo","fetchMovie","fetchSimilarMovies","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","stringify","success","sessionId","rateMovie","rating","isPersistentState","stateName","sessionState","initialState","results","total_pages","total_results","useHomeFetch","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","console","log","prev","setItem","Home","backdrop_path","original_title","overview","map","movie","index","poster_path","NoImage","id","BreadCrump","movieTitle","Rate","setValue","min","max","e","backdrop","MovieInfo","handleRating","rate","Noimage","vote_average","directors","length","director","name","credit_id","Tag","MovieInfoBar","buttons","useParams","Actor","character","imageUrl","Movie","credits","videos","crew","filter","member","job","actors","cast","videokey","useMovieFetch","NotFound","Login","setUserName","setPassword","setUser","navigate","useNavigate","handleSubmit","session_id","handleInput","autoComplete","Actors","actor","profile_path","Videos","opts","width","height","reverse","key","videoId","SimilarMovies","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aef9f458.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.35f4d399.svg\";","export default __webpack_public_path__ + \"static/media/tmdb-logo.e7029961.svg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    max-width: var(--maxWidth);\r\n    padding: 20px 0;\r\n    margin: 0 auto;\r\n    color:var(--white);\r\n\r\n    a{\r\n        color: var(--white);\r\n        text-decoration: none;\r\n    }\r\n`;\r\n\r\n\r\nexport const LogoImg = styled.img`\r\n    width: 200px;\r\n\r\n    @media screen and (max-width: 768px){\r\n        width: 150px;\r\n    }\r\n`;\r\n\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n    width: 100px;\r\n\r\n    @media screen and (max-width: 768px){\r\n        width: 80px;\r\n    }\r\n`;","import React, {useState, createContext} from 'react';\r\n\r\nexport const Context = createContext();\r\n\r\nconst UserProvider = ({children})=>{\r\n    let init;\r\n    if(sessionStorage.getItem('rmdbSessionId')){\r\n        init = JSON.parse(sessionStorage.getItem('rmdbSessionId'))\r\n    }\r\n    const [state, setState] = useState(init);\r\n\r\n    return (\r\n        <Context.Provider value={[state,setState]}>{children}</Context.Provider>\r\n    )\r\n}\r\n\r\nexport default UserProvider;","import React,{useContext} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport RMDBLogo from '../../images/react-movie-logo.svg';\r\nimport TMDBLogo from '../../images/tmdb-logo.svg';\r\n\r\nimport {Wrapper, Content, LogoImg, TMDBLogoImg} from './Header.styles';\r\n\r\n// Styles\r\n\r\n\r\n// Context\r\nimport {Context} from '../../context';\r\n\r\nconst Header = () => {\r\n\r\n    const [user, setUser] = useContext(Context);\r\n    return(\r\n        <Wrapper>\r\n        <Content>\r\n            <Link to='/'>\r\n                <LogoImg src={RMDBLogo} alt='rmdb-logo'/>\r\n            </Link>\r\n            {user?(\r\n                <span className=\"loggedin\">Logged in as: {user.userName}</span>\r\n\r\n            ):(\r\n                <Link to='/login'>\r\n                    <span className='login'>Log in</span>\r\n                </Link>\r\n            )}\r\n            <TMDBLogoImg src={TMDBLogo} alt='tmbd-logo'/>\r\n        </Content>\r\n    </Wrapper>\r\n    )\r\n    \r\n};\r\n\r\nexport default Header;\r\n","// Configuration for TMDB API\r\n// Read more about the API here: https://developers.themoviedb.org/\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = 'faaa3f4e9a58ef963b27123962394d83';\r\n\r\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\r\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\r\n// For login and voting\r\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\r\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\r\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\r\n\r\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\r\n// Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = 'w1280';\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = 'w780';\r\n\r\nexport {\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  background: linear-gradient(\r\n      to bottom,\r\n      rgba(0, 0, 0, 0) 41%,\r\n      rgba(0, 0, 0, 0.65) 100%\r\n    ),\r\n    url(${({ image }) => image}), var(--darkGrey);\r\n  background-size: 100%, cover;\r\n  background-position: center;\r\n  height: 600px;\r\n  position: relative;\r\n  animation: animateHeroImage 1s;\r\n\r\n  @keyframes animateHeroImage {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  z-index: 100;\r\n  max-width: 700px;\r\n  position: absolute;\r\n  bottom: 40px;\r\n  margin-right: 20px;\r\n  min-height: 100px;\r\n  color: var(--white);\r\n\r\n  h1 {\r\n    font-size: var(--fontSuperBig);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n\r\n  p {\r\n    font-size: var(--fontMed);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontSmall);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 720px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Styles\r\nimport {Wrapper, Content, Text} from './HeroImage.styles';\r\n\r\nconst HeroImage = ({image, title, text})=>(\r\n    <Wrapper image={image}>\r\n        <Content>\r\n            <Text>\r\n                <h1>{title}</h1>\r\n                <p>{text}</p>\r\n            </Text>\r\n        </Content>\r\n    </Wrapper>\r\n\r\n);\r\n\r\nHeroImage.propTypes={\r\n    image: PropTypes.string,\r\n    title: PropTypes.string,\r\n    text: PropTypes.string\r\n}\r\nexport default HeroImage;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  padding: 20px 20px;\r\n\r\n  h1 {\r\n    color: var(--medGrey);\r\n\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  grid-gap: 2rem;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Wrapper, Content} from './Grid.styles';\r\n\r\nconst Grid = ({header, children}) =>(\r\n    <Wrapper>\r\n        <h1>{header}</h1>\r\n        <Content>{children}</Content>\r\n    </Wrapper>\r\n);\r\n\r\nGrid.protoTypes ={\r\n    header: PropTypes.string,\r\n}\r\n\r\nexport default Grid;","import styled from 'styled-components';\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  max-width: 720px;\r\n  transition: all 0.3s;\r\n  object-fit: cover;\r\n  border-radius: 20px;\r\n  animation: animateThumb 0.5s;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  @keyframes animateThumb {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport{Image} from './Thumb.styles';\r\n\r\n\r\nconst Thumb = ({image, movieId, clickable})=>(\r\n    <div>\r\n        {clickable ? (\r\n            <Link to={`/${movieId}`}>\r\n                <Image src={image} alt='Movie-thumb'/>\r\n            </Link>\r\n        ) : <Image src={image} alt='Movie-thumb'/>}\r\n    </div>\r\n)\r\n\r\nThumb.propTypes = {\r\n    image: PropTypes.string,\r\n    movieId: PropTypes.number,\r\n    clickable: PropTypes.bool\r\n}\r\nexport default Thumb;","import {Spinner} from './Spinner.styles'\r\n\r\nexport default Spinner","import styled from 'styled-components'\r\n\r\nexport const Spinner = styled.div`\r\n    border: 5px solid var(--lightGrey);\r\n    border-top: 5px solid var(--medGrey);\r\n    border-radius: 50%;\r\n    width: 50px;\r\n    height: 50px;\r\n    animation: spin 0.8s linear infinite;\r\n    margin: 20px auto;\r\n\r\n    @keyframes spin {\r\n        0%{\r\n            transform: rotate(0deg);\r\n\r\n        }\r\n        100%{\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/search-icon.bb4c697f.svg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  position: relative;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  height: 55px;\r\n  background: var(--medGrey);\r\n  margin: 0 auto;\r\n  border-radius: 40px;\r\n  color: var(--white);\r\n\r\n  img {\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 14px;\r\n    width: 30px;\r\n  }\r\n\r\n  input {\r\n    font-size: var(--fontBig);\r\n    position: absolute;\r\n    left: 0;\r\n    margin: 8px 0;\r\n    padding: 0 0 0 60px;\r\n    border: 0;\r\n    width: 95%;\r\n    background: transparent;\r\n    height: 40px;\r\n    color: var(--white);\r\n\r\n    :focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Image\r\nimport searchIcon from '../../images/search-icon.svg';\r\n\r\n// Styles\r\nimport {Wrapper, Content} from './SearchBar.styles';\r\n\r\nconst SearchBar = ({ setSearchTerm }) =>{\r\n    const [state, setState] = useState('');\r\n    const initial = useRef(true);\r\n\r\n    useEffect(()=>{\r\n        if(initial.current){\r\n            initial.current= false;\r\n            return;\r\n        }\r\n\r\n        const timer = setTimeout(()=>{\r\n            setSearchTerm(state);\r\n        },500)\r\n\r\n        \r\n        return ()=> clearTimeout(timer)\r\n\r\n    },[setSearchTerm, state])\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Content>\r\n                <img src={searchIcon} alt='search-icon'/>\r\n                <input\r\n                type='text'\r\n                placeholder='Search Movie'\r\n                onChange={ event => setState(event.currentTarget.value)}\r\n                value = {state}\r\n                />\r\n            </Content>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nSearchBar.protoTypes={\r\n    setSearchTerm: PropTypes.string\r\n}\r\nexport default SearchBar;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.button`\r\n  display: block;\r\n  background: var(--darkGrey);\r\n  width: 25%;\r\n  min-width: 200px;\r\n  height: 60px;\r\n  border-radius: 30px;\r\n  color: var(--white);\r\n  border: 0;\r\n  font-size: var(--fontBig);\r\n  margin: 20px auto;\r\n  transition: all 0.3s;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Wrapper} from './Button.styles';\r\n\r\nconst Button = ({text, callback}) => {\r\n    return (\r\n        <Wrapper type=\"button\" onClick={callback}>\r\n            {text}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    callback: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import {\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL\r\n} from './config';\r\n\r\nconst defaultConfig = {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nconst apiSettings = {\r\n  fetchMovies: async (searchTerm, page) => {\r\n    const endpoint = searchTerm\r\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\r\n      : `${POPULAR_BASE_URL}&page=${page}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchMovieVideo: async movieId => {\r\n    const endpoint = `${API_URL}movie/${movieId}/videos?api_key=${API_KEY}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchMovie: async movieId => {\r\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchSimilarMovies: async movieId => {\r\n    const endpoint = `${API_URL}movie/${movieId}/similar?api_key=${API_KEY}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchCredits: async movieId => {\r\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n    return await (await fetch(creditsEndpoint)).json();\r\n  },\r\n  // Bonus material below for login\r\n  getRequestToken: async () => {\r\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\r\n    return reqToken.request_token;\r\n  },\r\n  authenticate: async (requestToken, username, password) => {\r\n    const bodyData = {\r\n      username,\r\n      password,\r\n      request_token: requestToken\r\n    };\r\n    // First authenticate the requestToken\r\n    const data = await (\r\n      await fetch(LOGIN_URL, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify(bodyData)\r\n      })\r\n    ).json();\r\n    // Then get the sessionId with the requestToken\r\n    if (data.success) {\r\n      const sessionId = await (\r\n        await fetch(SESSION_ID_URL, {\r\n          ...defaultConfig,\r\n          body: JSON.stringify({ request_token: requestToken })\r\n        })\r\n      ).json();\r\n      return sessionId;\r\n    }\r\n  },\r\n  rateMovie: async (sessionId, movieId, value) => {\r\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\r\n\r\n    const rating = await (\r\n      await fetch(endpoint, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify({ value })\r\n      })\r\n    ).json();\r\n\r\n    return rating;\r\n  }\r\n};\r\n\r\nexport default apiSettings;\r\n","// Convert time to hours and minutes\r\nexport const calcTime = time => {\r\n  const hours = Math.floor(time / 60);\r\n  const mins = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n};\r\n// Convert a number to money formatting\r\nexport const convertMoney = money => {\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n  });\r\n  return formatter.format(money);\r\n};\r\n\r\n\r\nexport const isPersistentState = stateName =>{\r\n  const sessionState = sessionStorage.getItem(stateName);\r\n  return sessionState && JSON.parse(sessionState);\r\n}","import {useState, useEffect, useRef} from 'react'\r\n\r\n// API\r\nimport API from '../API'\r\n\r\n// Helpers\r\nimport {isPersistentState} from '../helpers';\r\n\r\nconst initialState={\r\n    page:0,\r\n    results:[],\r\n    total_pages:0,\r\n    total_results:0\r\n};\r\n\r\nexport const useHomeFetch = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [state, setState] = useState(initialState);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error , setError] = useState(false);\r\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n    const fetchMovies = async (page, searchTerm = \"\") =>{\r\n        try{\r\n            setError(false);\r\n            setLoading(true);\r\n\r\n            const movies = await API.fetchMovies(searchTerm, page);\r\n            console.log(movies);\r\n\r\n            setState(prev => ({\r\n               ...movies,\r\n               results: \r\n                page>1? [...prev.results, ...movies.results] : [...movies.results]\r\n            }))\r\n        }catch(error){\r\n           setError(true); \r\n        }\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    // Initial and search\r\n    useEffect(()=>{\r\n\r\n        if(!searchTerm){\r\n            const sessionState = isPersistentState('homeState');\r\n            \r\n            if(sessionState){\r\n                setState(sessionState)\r\n                return;\r\n            }\r\n        }\r\n\r\n        setState(initialState)\r\n        fetchMovies(1,searchTerm) \r\n    },[searchTerm])\r\n\r\n    // Load More\r\n    useEffect(()=>{\r\n        if(!isLoadingMore) return;\r\n\r\n        fetchMovies(state.page+1,searchTerm);\r\n        setIsLoadingMore(false);\r\n\r\n    },[isLoadingMore, searchTerm, state.page])\r\n\r\n    // Write to session storage\r\n    useEffect(()=>{\r\n    if(!searchTerm) {\r\n        sessionStorage.setItem('homeState', JSON.stringify(state));\r\n        }\r\n    },[searchTerm,state])\r\n\r\n    \r\n    return {state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore}\r\n}\r\n\r\n ","export default __webpack_public_path__ + \"static/media/no-image.15338d70.jpg\";","import React from 'react';\r\n\r\n\r\n\r\n// Configuration\r\nimport {POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL} from '../config';\r\n\r\n// Components\r\nimport HeroImage from './HeroImage'\r\nimport Grid from './Grid'\r\nimport Thumb from './Thumb'\r\nimport Spinner from './Spinner'\r\nimport SearchBar from './SearchBar'\r\nimport Button from './Button'\r\n\r\n// Hook\r\nimport {useHomeFetch} from '../hooks/useHomeFetch'\r\n\r\n// Image\r\nimport NoImage from '../images/no-image.jpg';\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const {state,loading,error, searchTerm, setSearchTerm, setIsLoadingMore} = useHomeFetch();\r\n\r\n    console.log(state)\r\n\r\n    if(error) return <div>Something went wrong</div>\r\n    return (\r\n        <>\r\n        {!searchTerm && state.results[0] ?(\r\n        <HeroImage \r\n        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n        title={state.results[0].original_title}\r\n        text={state.results[0].overview}\r\n        /> \r\n        ): null\r\n        }\r\n        <SearchBar setSearchTerm={setSearchTerm}/>\r\n        <Grid header={ searchTerm? 'Search Results':'Popular Movies'}>\r\n            {state.results.map((movie, index )=>(\r\n                <Thumb \r\n                key={movie.id+index}\r\n                clickable\r\n                image = {\r\n                    movie.poster_path?\r\n                    IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                    : NoImage\r\n                }\r\n                movieId={movie.id}\r\n            />\r\n\r\n            ))}\r\n        </Grid>\r\n        \r\n        {loading && (\r\n           <Spinner/> \r\n        )} \r\n        \r\n        {state.page < state.total_pages && !loading && (\r\n            <Button text='Load More' callback={()=> setIsLoadingMore(true)}/>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 70px;\r\n    background: var(--medGrey);\r\n    color: var(--white);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    max-width: var(--maxWidth);\r\n    padding: 0 20px;\r\n\r\n    span{\r\n        font-size: var(--fontMed);\r\n        color: var(--white);\r\n        padding-right: 10px;\r\n\r\n        @media screen and (max-width:768px){\r\n            font-size: var(--fontSmall);\r\n        }\r\n    }\r\n`;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom'\r\n\r\n// Styles\r\nimport {Wrapper, Content} from './BreadCrump.styles';\r\n\r\nconst BreadCrump = ({movieTitle}) => {\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <Link to='/'>\r\n                    <span>Home</span>\r\n                </Link>\r\n                <span>|</span>\r\n                <span>{movieTitle}</span>\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nBreadCrump.propTypes = {\r\n    movieTitle: PropTypes.string,\r\n}\r\n\r\nexport default BreadCrump;\r\n\r\n","import React, {useState} from 'react';\r\n\r\nconst Rate = ({callback})=>{\r\n    const [value, setValue] = useState(5);\r\n\r\n    return(\r\n        <div>\r\n            <input\r\n            type='range'\r\n            min='1'\r\n            max='10'\r\n            value={value}\r\n            onChange={e=>setValue(e.currentTarget.value)}\r\n            />\r\n            {value}\r\n            <p>\r\n                <button onClick={()=>callback(value)}>Rate</button>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rate","import styled from 'styled-components'\r\nimport { IMAGE_BASE_URL,BACKDROP_SIZE } from '../../config';\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    background: ${({backdrop})=>\r\n        backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})`\r\n        : '#000'  \r\n    };\r\n    background-size: cover;\r\n    background-position: center;\r\n    padding: 40px 20px;\r\n    animation: animateMovieInfo 1s;\r\n\r\n    @keyframes animateMovieInfo{\r\n        from{\r\n            opacity: 0;\r\n        }to{\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  border-radius: 20px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    max-height: none;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  padding: 20px 40px;\r\n  color: var(--white);\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  .rating-directors {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .score {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 35px;\r\n    height: 35px;\r\n    background: #fff;\r\n    color: #000;\r\n    font-weight: 800;\r\n    border-radius: 50%;\r\n    margin: 0;\r\n    \r\n  }\r\n\r\n  .director {\r\n    margin: 0 0 0 40px;\r\n    \r\n\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  h1 {\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n\r\n  h3{\r\n    user-select: none;\r\n  }\r\n`;\r\n","import React, {useContext} from 'react';\r\nimport API from '../../API'\r\nimport PropTypes from 'prop-types';\r\n\r\n// Components\r\nimport Thumb from '../Thumb';\r\nimport Rate from '../Rate';\r\n\r\n// Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\n// Image\r\nimport Noimage from '../../images/no-image.jpg';\r\n\r\n// Styles\r\nimport {Wrapper, Content, Text} from './MovieInfo.styles';\r\n\r\n// Context\r\nimport {Context} from '../../context';\r\n\r\n\r\nconst MovieInfo = ({movie})=>{\r\n\r\n    const [user] = useContext(Context);\r\n\r\n    const handleRating = async value=>{\r\n        try{\r\n            const rate = await API.rateMovie(user.sessionId, movie.id, value);\r\n            console.log(rate)\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n         \r\n    }\r\n\r\n    return(\r\n    <Wrapper backdrop={movie.backdrop_path}>\r\n        <Content>\r\n            <Thumb\r\n            image={movie.poster_path? \r\n            `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`: Noimage}\r\n            clickable={false}\r\n            />\r\n\r\n            <Text>\r\n                <h1>{movie.title}</h1>\r\n                <br/>\r\n                <h3>PLOT</h3>\r\n                <p>{movie.overview}</p>\r\n                <br/>\r\n                <div className=\"rating-directors\">\r\n                    <div>\r\n                        <h3>RATING</h3>\r\n                        <div className=\"score\">{movie.vote_average}</div>\r\n                    </div>\r\n                    <div className=\"director\">\r\n                        <h3>DIRECTOR{movie.directors.length>1? 'S':''}</h3>\r\n                        {movie.directors.map(director=>(\r\n                            <p key={director.credit_id}>{director.name}</p>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                {user &&\r\n                <div>\r\n                    <h3>Rate Movie</h3>\r\n                    <Rate callback={handleRating}/>\r\n                </div>}\r\n            </Text>\r\n        </Content>\r\n    </Wrapper>\r\n    )}\r\n\r\nMovieInfo.propTypes = {\r\n    movie: PropTypes.object\r\n}\r\n\r\nexport default MovieInfo;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    min-height:100px;\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n\r\n`;\r\nexport const Content = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\r\n    grid-gap: 0.5rem;\r\n    width: 100%;\r\n\r\n    .link{\r\n        text-decoration: none;\r\n\r\n        :hover {\r\n            opacity: 0.8;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: block;\r\n\r\n        .column{\r\n            margin: 20px 0;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const Tag = styled.div`\r\n    background-color: var(--medGrey);\r\n    border-radius: 40px;\r\n    padding: 10px 0;\r\n    margin: 10px;\r\n    color: var(--white);\r\n    font-weight: 800;\r\n    text-align: center;\r\n    text-transform: capitalize;\r\n`;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {useParams, Link} from 'react-router-dom';\r\n\r\n// Helpers\r\nimport {calcTime, convertMoney} from '../../helpers';\r\n\r\n// Styles\r\nimport {Wrapper, Content, Tag} from './MovieInfoBar.styles'\r\n\r\n\r\nconst MovieInfoBar = ({buttons}) => {\r\n    const { movieId } = useParams();\r\n    return(\r\n        <Wrapper>\r\n            <Content>\r\n                {buttons.map((name, index)=> {\r\n                    return (<Link key={index} to={`${name}`} className='link'><Tag key={index}>{name}</Tag></Link>)\r\n            })}\r\n            </Content>\r\n        </Wrapper>\r\n    )\r\n    // <Wrapper>\r\n    //     <Content>\r\n    //         <div className=\"column\">\r\n    //             <p>Running time: {calcTime(time)}</p>\r\n    //         </div>\r\n    //         <div className=\"column\">\r\n    //             <p>Budget: {convertMoney(budget)}</p>\r\n    //         </div>\r\n    //         <div className=\"column\">\r\n    //             <p>Revenue: {convertMoney(revenue)}</p>\r\n    //         </div>\r\n    //     </Content>\r\n    // </Wrapper>\r\n}\r\n\r\n// MovieInfoBar.propTypes = {\r\n//     title: PropTypes.number,\r\n//     budget: PropTypes.number,\r\n//     revenue: PropTypes.number\r\n// }\r\n\r\nexport default MovieInfoBar\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    color: var(--white);\r\n    background: var(--darkGrey);\r\n    border-radius: 20px;\r\n    padding: 5px;\r\n    text-align: center;\r\n\r\n    h3{\r\n        margin: 10px 0 0 0; \r\n    }\r\n\r\n    p{\r\n        margin: 5px 0;\r\n    }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    display: block;\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    border-radius:15px;\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {Wrapper, Image} from \"./Actor.styles\";\r\n\r\nconst Actor = ({name,character,imageUrl}) => (\r\n    <Wrapper>\r\n        <Image src={imageUrl} alt='ator-thumb'/>\r\n        <h3>{name}</h3>\r\n        <p>{character}</p>\r\n    </Wrapper>\r\n)\r\n\r\n\r\nActor.propTypes = {\r\n    name: PropTypes.string,\r\n    character: PropTypes.string,\r\n    imageUrl: PropTypes.string\r\n}\r\n\r\nexport default Actor;\r\n","import React from 'react';\r\nimport { useParams, Outlet } from 'react-router-dom';\r\n// Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\n\r\n// Components\r\nimport Grid from './Grid';\r\nimport Spinner from './Spinner';\r\nimport BreadCrump from './BreadCrump';\r\nimport MovieInfo from './MovieInfo';\r\nimport MovieInfoBar from './MovieInfoBar';\r\nimport Actor from './Actor';\r\n\r\n// Hook\r\nimport { useMovieFetch } from '../hooks/useMovieFetch';\r\n\r\n\r\n// Image\r\nimport NoImage from '../images/no-image.jpg';\r\n\r\n\r\nconst Movie = () => {\r\n  const { movieId } = useParams();\r\n  \r\n  const { state: movie, loading, error } = useMovieFetch(movieId);\r\n\r\n  console.log(movie);\r\n  sessionStorage.setItem('movieData', JSON.stringify(movie));\r\n\r\n  if(loading) return <Spinner/>\r\n  if(error) return <div>Something went wrong</div>\r\n  \r\n  return (\r\n    <>\r\n      <BreadCrump movieTitle={movie.title}/>\r\n      <MovieInfo movie={movie}/>\r\n      {/* <MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue}/> */}\r\n      <MovieInfoBar buttons={[\"actors\",\"about\",\"videos\",\"similar movies\"]}/>\r\n      <Outlet movie={movie}/>\r\n    </>\r\n    \r\n  );\r\n};\r\nexport default Movie;","import { useState, useEffect } from 'react';\r\nimport API from '../API';\r\n\r\n// Helper\r\nimport { isPersistentState } from '../helpers';\r\n\r\n\r\nexport const useMovieFetch = movieId => {\r\n  const [state, setState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchMovie = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(false);\r\n\r\n        const movie = await API.fetchMovie(movieId);\r\n        const credits = await API.fetchCredits(movieId);\r\n        const videos = await API.fetchMovieVideo(movieId);\r\n        \r\n        console.log(\"v\")\r\n        console.log(videos)\r\n        // Get directors only\r\n        const directors = credits.crew.filter(\r\n          member => member.job === 'Director'\r\n        );\r\n\r\n       \r\n        setState({\r\n          ...movie,\r\n          actors: credits.cast,\r\n          directors,\r\n          videokey: videos.results\r\n          \r\n        });\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n    };\r\n\r\n    const sessionState = isPersistentState(movieId);\r\n    if(sessionState){\r\n      setState(sessionState)\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    fetchMovie();\r\n  }, [movieId]);\r\n\r\n  //Write to sessionStorage\r\n  useEffect(()=>{\r\n    sessionStorage.setItem(movieId, JSON.stringify(state))\r\n  },[movieId,state]);\r\n\r\n  return { state, loading, error };\r\n};\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n           NotFound \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    height: 80vh;\r\n\r\n`;\r\nexport const Content = styled.div`\r\n    max-width: 320px;\r\n    padding: 20px;\r\n    height: fit-content;\r\n    color: var(--darkGrey);\r\n\r\n    input{\r\n        width: 100%;\r\n        height: 30px;\r\n        border: 1px solid var(--darkGrey);\r\n        border-radius: 20px;\r\n        margin: 10px 0;\r\n        padding: 10px;\r\n    }\r\n\r\n    .error{\r\n        color: red;\r\n    }\r\n`;\r\n\r\n","import React, {useState, useContext} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport API from '../API';\r\n\r\n// Components\r\nimport Button from './Button';\r\n\r\n// Styles\r\nimport {Wrapper, Content} from './Login.styles';\r\n\r\n// Context\r\nimport {Context} from '../context';\r\n\r\nconst Login = ()=>{\r\n\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState(false);\r\n\r\n    const [user, setUser] = useContext(Context);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const handleSubmit = async() => {\r\n        setError(false);\r\n        try{\r\n            const requestToken = await API.getRequestToken();\r\n            const sessionId = await API.authenticate(requestToken,userName,password);\r\n            setUser({sessionId: sessionId.session_id, userName});\r\n        \r\n            console.log(sessionId);\r\n            sessionStorage.setItem('rmdbSessionId', JSON.stringify({sessionId:sessionId.session_id,userName:userName}));\r\n            navigate('/');\r\n\r\n        }catch(error){\r\n            setError(true);\r\n        }\r\n    };\r\n    \r\n    const handleInput = e => {\r\n        const name = e.currentTarget.name;\r\n        const value = e.currentTarget.value;\r\n\r\n        if(name==='username') setUserName(value);\r\n        if(name==='password') setPassword(value);\r\n    };\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Content>\r\n                {error && <div className='error'>There was an error!</div>}\r\n                <label>Username:</label>\r\n                <input\r\n                    type='text'\r\n                    value={userName}\r\n                    name = 'username'\r\n                    onChange={handleInput}\r\n                    autoComplete='off'\r\n                />\r\n                <label>Password:</label>\r\n                <input\r\n                    type='password'\r\n                    value={password}\r\n                    name = 'password'\r\n                    onChange={handleInput}\r\n                    autoComplete='off'\r\n                />\r\n                <Button text='Login' callback={handleSubmit}/>\r\n            </Content>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\n// Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\n\r\n// Components\r\nimport Grid from './Grid';\r\nimport Actor from './Actor';\r\n\r\n// Image\r\nimport NoImage from '../images/no-image.jpg';\r\n\r\n\r\nconst Actors = () => {\r\n    const movie = JSON.parse(sessionStorage.getItem(\"movieData\"))\r\n    \r\n    return (\r\n      \r\n        <Grid header='Actors'>\r\n        {movie.actors.map(actor=>(\r\n          <Actor\r\n            key={actor.credit_id}\r\n            name={actor.name}\r\n            character={actor.character}\r\n            imageUrl={\r\n              actor.profile_path ?\r\n              `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n              : NoImage\r\n            }\r\n          />\r\n          \r\n        ))}\r\n    </Grid>\r\n    \r\n    )\r\n}\r\n\r\nexport default Actors;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 20px 40px;\r\n\r\n    h1 {\r\n    color: var(--medGrey);\r\n\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n    grid-gap: 2rem;\r\n    width: 100%;\r\n    text-align: center;\r\n\r\n`;\r\n\r\n","import React from 'react'\r\nimport YouTube from 'react-youtube';\r\n\r\n\r\n// Styles\r\nimport {Wrapper, Content} from './Videos.styles'\r\n\r\nconst Videos = () => {\r\n    const movie = JSON.parse(sessionStorage.getItem(\"movieData\"))\r\n    \r\n    const opts = {\r\n        width: '320',\r\n        height: '240'\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n        <h1>Videos</h1>\r\n        <Content>\r\n            {movie.videokey.reverse().map((key,index)=>(\r\n           <YouTube key={index} videoId={key.key} opts={opts}/>\r\n           \r\n          ))}\r\n        </Content>\r\n        </Wrapper>\r\n    )   \r\n}\r\n\r\nexport default Videos;\r\n","import React from 'react';\r\n\r\n// Configuration\r\nimport {POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL} from '../../config';\r\n\r\n// Hook\r\nimport {useHomeFetch} from '../../hooks/useHomeFetch'\r\n\r\n// Image\r\nimport NoImage from '../../images/no-image.jpg';\r\n\r\n// Components\r\nimport Grid from '../Grid'\r\nimport Thumb from '../Thumb'\r\nimport Spinner from '../Spinner'\r\nimport Button from '../Button'\r\n\r\n\r\nconst SimilarMovies = () => {\r\n\r\n    const {state,loading,error, searchTerm, setSearchTerm, setIsLoadingMore} = useHomeFetch();\r\n\r\n    return (\r\n        <>\r\n        <Grid header={\"Similar Movies\"}>\r\n            {state.results.map(movie =>(\r\n                <Thumb \r\n                key={movie.id}\r\n                clickable\r\n                image = {\r\n                    movie.poster_path?\r\n                    IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                    : NoImage\r\n                }\r\n                movieId={movie.id}\r\n            />\r\n\r\n            ))}\r\n        </Grid>\r\n        {loading && (\r\n           <Spinner/> \r\n        )} \r\n        \r\n        {state.page < state.total_pages && !loading && (\r\n            <Button text='Load More' callback={()=> setIsLoadingMore(true)}/>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SimilarMovies;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle `\r\n    :root{\r\n        --maxWidth: 1280px;\r\n        --white: #fff;\r\n        --lightGrey: #eee;\r\n        --medGrey: #353535;\r\n        --darkGrey: #1c1c1c;\r\n        --fontSuperBig: 2.5rem;\r\n        --fontBig: 1.5rem;\r\n        --fontMed: 1.2rem;\r\n        --fontSmall: 1rem;\r\n    }\r\n\r\n    html {\r\n        height: 100%;\r\n    }\r\n\r\n    *{\r\n        box-sizing: border-box;\r\n        font-family: 'Abel', sans-serif;\r\n    }\r\n\r\n    body {\r\n        margin: 0;\r\n        padding: 0;\r\n        padding-bottom:20px;\r\n\r\n        h1{\r\n            font-size: 2rem;\r\n            font-weight: 600;\r\n            color: var(--white);\r\n        }\r\n\r\n        h3{\r\n            font-size: 1.1rem;\r\n            font-weight: 600;\r\n        }\r\n\r\n        p {\r\n            font-size: 1rem;\r\n            color: var(--white);\r\n        }\r\n    }\r\n\r\n\r\n`","import React from 'react';\r\n\r\n// Routing\r\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom';\r\n\r\n// Components\r\nimport Header from './components/Header';\r\nimport Home from './components/Home';\r\nimport Movie from './components/Movie';\r\nimport NotFound from './components/NotFound';\r\nimport Login from './components/Login';\r\nimport Actors from './components/Actors';\r\nimport Videos from './components/Videos';\r\nimport SimilarMovies from './components/SimilarMovies';\r\n\r\n// Context \r\nimport UserProvider from './context';\r\n\r\n// Styles\r\nimport {GlobalStyle} from './GlobalStyle';\r\n\r\nconst App =() =>(\r\n \r\n    <Router>\r\n      <UserProvider>\r\n        <Header/>\r\n        <Routes>\r\n          <Route path='/' element={<Home/>}/>\r\n          <Route path='/login' element={ <Login/>}/>\r\n          <Route path='/:movieId' element={<Movie/>}>\r\n              <Route path='/:movieId/' element={ <Actors/> }/>\r\n              <Route path='/:movieId/actors' element={ <Actors/> }/>\r\n              <Route path='/:movieId/videos' element={ <Videos/> }/>\r\n              <Route path='/:movieId/similar%20movies' element={ <SimilarMovies/> }/>\r\n          </Route>\r\n          <Route path='/*' element={<NotFound/>}/>\r\n        </Routes>\r\n        <GlobalStyle/>\r\n      </UserProvider>\r\n    </Router>\r\n  );\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}